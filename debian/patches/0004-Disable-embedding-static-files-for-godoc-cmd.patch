From: Shengjing Zhu <zhsj@debian.org>
Date: Tue, 17 Nov 2020 02:29:01 +0800
Subject: Disable embedding static files for godoc cmd
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

This path is debian-specific, hence this patch cannot go upstream.

Forwarded: not-needed

Original authors:
+ Mart√≠n Ferrari <tincho@debian.org>
+ Anthony Fok <foka@debian.org>
---
 cmd/godoc/godoc_test.go  | 8 ++++++--
 cmd/godoc/main.go        | 6 ++----
 godoc/static/gen_test.go | 1 +
 3 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/cmd/godoc/godoc_test.go b/cmd/godoc/godoc_test.go
index ac6bacd..10ddc31 100644
--- a/cmd/godoc/godoc_test.go
+++ b/cmd/godoc/godoc_test.go
@@ -254,7 +254,9 @@ package a; import _ "godoc.test/repo2/a"; const Name = "repo1a"`,
 
 	// Start the server.
 	addr := serverAddress(t)
-	args := []string{fmt.Sprintf("-http=%s", addr)}
+	args := []string{fmt.Sprintf("-http=%s", addr),
+		"-templates=" + os.Getenv("GOPATH") + "/src/golang.org/x/tools/godoc/static",
+	}
 	if withIndex {
 		args = append(args, "-index", "-index_interval=-1s")
 	}
@@ -528,7 +530,9 @@ func (T) F() int { return C }
 
 	// Start the server.
 	addr := serverAddress(t)
-	cmd := exec.Command(bin, fmt.Sprintf("-http=%s", addr), "-analysis=type")
+	cmd := exec.Command(bin, fmt.Sprintf("-http=%s", addr), "-analysis=type",
+		"-templates=" + os.Getenv("GOPATH") + "/src/golang.org/x/tools/godoc/static",
+	)
 	cmd.Dir = e.Config.Dir
 	// Point to an empty GOROOT directory to speed things up
 	// by not doing type analysis for the entire real GOROOT.
diff --git a/cmd/godoc/main.go b/cmd/godoc/main.go
index 8780f8b..5dab9b4 100644
--- a/cmd/godoc/main.go
+++ b/cmd/godoc/main.go
@@ -40,10 +40,8 @@ import (
 
 	"golang.org/x/tools/godoc"
 	"golang.org/x/tools/godoc/analysis"
-	"golang.org/x/tools/godoc/static"
 	"golang.org/x/tools/godoc/vfs"
 	"golang.org/x/tools/godoc/vfs/gatefs"
-	"golang.org/x/tools/godoc/vfs/mapfs"
 	"golang.org/x/tools/godoc/vfs/zipfs"
 	"golang.org/x/tools/internal/gocommand"
 	"golang.org/x/xerrors"
@@ -194,8 +192,8 @@ func main() {
 		fs.Bind("/lib/godoc", vfs.OS(*templateDir), "/", vfs.BindBefore)
 		fs.Bind("/favicon.ico", vfs.OS(*templateDir), "/favicon.ico", vfs.BindReplace)
 	} else {
-		fs.Bind("/lib/godoc", mapfs.New(static.Files), "/", vfs.BindReplace)
-		fs.Bind("/favicon.ico", mapfs.New(static.Files), "/favicon.ico", vfs.BindReplace)
+		fs.Bind("/lib/godoc", vfs.OS("/usr/share/golang-golang-x-tools/godoc/static"), "/", vfs.BindBefore)
+		fs.Bind("/favicon.ico", vfs.OS("/usr/share/golang-golang-x-tools/godoc/static"), "/favicon.ico", vfs.BindReplace)
 	}
 
 	// Get the GOMOD value, use it to determine if godoc is being invoked in module mode.
diff --git a/godoc/static/gen_test.go b/godoc/static/gen_test.go
index 7f74329..e2d3303 100644
--- a/godoc/static/gen_test.go
+++ b/godoc/static/gen_test.go
@@ -14,6 +14,7 @@ import (
 )
 
 func TestStaticIsUpToDate(t *testing.T) {
+	t.Skip("skipping test as static.go is disabled for Debian build")
 	if runtime.GOOS == "android" {
 		t.Skip("files not available on android")
 	}
